drop table if exists films, mpa, film_genres, genre, likes, users, friendship_list;

CREATE table if not exists films (
  film_id INTEGER GENERATED BY DEFAULT AS identity not null PRIMARY KEY,
  name varchar(55) not null,
  description varchar (255),
  releasedate date not null,
  duration int not null,
  mpa_id INTEGER not null
);

CREATE table if not exists mpa (
  mpa_id INTEGER not null PRIMARY key,
  name varchar(55) not null
);

create table if not exists film_genres (
  film_id INTEGER,
  genre_id INTEGER,
  PRIMARY key (film_id, genre_id)
);

CREATE table if not exists genre (
  genre_id INTEGER PRIMARY key,
  name varchar(55) not null
);

alter table films ADD FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id) on delete cascade;
alter table film_genres ADD FOREIGN KEY (film_id) REFERENCES films (film_id) on delete cascade;
alter table film_genres ADD FOREIGN KEY (genre_id) REFERENCES genre (genre_id) on delete cascade;


CREATE table if not exists likes (
  film_id int not null,
  user_id int,
  PRIMARY KEY (user_id,film_id)
);

CREATE table if not exists users (
  user_id INTEGER GENERATED BY DEFAULT AS identity not null PRIMARY KEY,
  login varchar (55) not null,
  name varchar (55),
  email varchar (55) not null,
  birthday date not null
);

create unique index if not exists USER_EMAIL_UINDEX on USERS (email);
create unique index if not exists USER_LOGIN_UINDEX on USERS (login);

CREATE table if not exists friendship_list (
  user1_id int not null,
  user2_id int not null,
  PRIMARY key (user1_id, user2_id)
);

ALTER TABLE likes ADD FOREIGN KEY (film_id) REFERENCES films (film_id) on delete cascade;

ALTER TABLE likes ADD FOREIGN KEY (user_id) REFERENCES users (user_id) on delete cascade;

ALTER TABLE friendship_list ADD FOREIGN KEY (user1_id) REFERENCES users (user_id) on delete cascade;

ALTER TABLE friendship_list ADD FOREIGN KEY (user2_id) REFERENCES users (user_id) on delete cascade;
